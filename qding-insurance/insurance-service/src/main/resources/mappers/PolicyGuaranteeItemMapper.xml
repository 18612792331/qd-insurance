<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qding.insurance.dao.PolicyGuaranteeItemMapper">
  <resultMap id="BaseResultMap" type="com.qding.insurance.domain.PolicyGuaranteeItem">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="policy_id" jdbcType="VARCHAR" property="policyId" />
    <result column="item_title" jdbcType="VARCHAR" property="itemTitle" />
    <result column="item_type" jdbcType="INTEGER" property="itemType" />
    <result column="compensate_type" jdbcType="INTEGER" property="compensateType" />
  </resultMap>
  
  <sql id="Base_Column_List">
    ID, policy_id, item_title, item_type, compensate_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from policy_guarantee_item
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="getByPolicyAndObject" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    i.ID, i.policy_id, i.item_title, i.item_type, i.compensate_type
    from policy_guarantee_item i
    where i.policy_id = #{policyId,jdbcType=VARCHAR} and i.item_type = 1
    and exists (select 1 from policy_guarantee_object o where o.item_id = i.id and o.object_id = #{objId,jdbcType=VARCHAR})
  </select>
  
  
  <select id="getListByPolicyId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from policy_guarantee_item 
    where policy_id = #{policyId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from policy_guarantee_item
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="batchInsert" parameterType="java.util.List">
        insert into policy_guarantee_item 
        (ID, policy_id, item_title, item_type, compensate_type)
        VALUES
     <foreach collection="list" item="model"  separator=",">
        (#{model.id,jdbcType=VARCHAR}, #{model.policyId,jdbcType=VARCHAR}, #{model.itemTitle,jdbcType=VARCHAR}, 
      #{model.itemType,jdbcType=INTEGER}, #{model.compensateType,jdbcType=INTEGER})
     </foreach>
  </insert>
  <insert id="insert" parameterType="com.qding.insurance.domain.PolicyGuaranteeItem">
    insert into policy_guarantee_item (ID, policy_id, item_title, 
      item_type, compensate_type)
    values (#{id,jdbcType=VARCHAR}, #{policyId,jdbcType=VARCHAR}, #{itemTitle,jdbcType=VARCHAR}, 
      #{itemType,jdbcType=INTEGER}, #{compensateType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qding.insurance.domain.PolicyGuaranteeItem">
    insert into policy_guarantee_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="policyId != null">
        policy_id,
      </if>
      <if test="itemTitle != null">
        item_title,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
      <if test="compensateType != null">
        compensate_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="policyId != null">
        #{policyId,jdbcType=VARCHAR},
      </if>
      <if test="itemTitle != null">
        #{itemTitle,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=INTEGER},
      </if>
      <if test="compensateType != null">
        #{compensateType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qding.insurance.domain.PolicyGuaranteeItem">
    update policy_guarantee_item
    <set>
      <if test="policyId != null">
        policy_id = #{policyId,jdbcType=VARCHAR},
      </if>
      <if test="itemTitle != null">
        item_title = #{itemTitle,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=INTEGER},
      </if>
      <if test="compensateType != null">
        compensate_type = #{compensateType,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qding.insurance.domain.PolicyGuaranteeItem">
    update policy_guarantee_item
    set policy_id = #{policyId,jdbcType=VARCHAR},
      item_title = #{itemTitle,jdbcType=VARCHAR},
      item_type = #{itemType,jdbcType=INTEGER},
      compensate_type = #{compensateType,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>